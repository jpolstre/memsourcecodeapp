{"version":3,"sources":["editor.js","App.js","configdb.js","index.js"],"names":["styles","root","fontSize","width","border","borderRadius","boxSizing","fontFamily","theme","plain","EditorExample","props","onValueChange","code","setState","valueChange","highlight","defaultProps","language","codeSelected","languaje","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token","state","value","this","padding","Component","firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","App","filterText","titleForm","swForm","codes","id","description","date","ServerValue","TIMESTAMP","handledChange","event","target","name","JSON","parse","stringify","handledClickShowCode","row","handledClickDelete","window","confirm","ref","child","remove","handledClickClear","save","alert","update","keyCode","push","set","handledSubmitSave","e","console","log","preventDefault","setTimeout","document","getElementById","focus","escFunction","handledClickAdd","handledFilterChange","handledClickFilerClear","handledKeyDown","orderByChild","on","snapshot","codesSn","val","Object","keys","reverse","sn","addEventListener","setDataBaseStart","dt","Date","getMonth","toString","padStart","getDate","getFullYear","getHours","getMinutes","getSeconds","filterArray","trim","toLocaleLowerCase","split","filter","c","toLowerCase","every","currentValue","indexOf","rows","getFilterCodes","onClick","getFormatDate","modal","undefined","bg","onSubmit","autoComplete","htmlFor","type","placeholder","onChange","Fragment","onKeyDown","React","ReactDom","render"],"mappings":"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","file":"static/js/main.b482f87c.chunk.js","sourcesContent":["import React, { Fragment, Component } from \"react\";\r\n\r\nimport Editor from \"react-simple-code-editor\";\r\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\r\nimport theme from \"prism-react-renderer/themes/nightOwl\";\r\n\r\nconst styles = {\r\n  root: {\r\n    // overflowY:'auto',\r\n    // height:'400px',\r\n    fontSize: \"12px\",\r\n    width: \"100%\",\r\n    border: \"1px solid mediumvioletred\",\r\n    borderRadius: \"5px\",\r\n    boxSizing: \"border-box\",\r\n    fontFamily: '\"Dank Mono\", \"Fira Code\", monospace',\r\n    ...theme.plain\r\n  }\r\n};\r\n\r\nclass EditorExample extends Component {\r\n  constructor(props) {\r\n    //  console.log(props)\r\n    super(props);\r\n    this.state = {\r\n      code: props.codeSelected.code,\r\n      language: props.codeSelected.languaje\r\n    };\r\n  }\r\n\r\n  onValueChange = code => {\r\n    this.setState({ code });\r\n    this.props.valueChange(code);\r\n  };\r\n\r\n  highlight = code => (\r\n    <Highlight\r\n      {...defaultProps}\r\n      theme={theme}\r\n      code={code}\r\n      language={this.props.codeSelected.languaje}\r\n    >\r\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n        <Fragment>\r\n          {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n              {line.map((token, key) => (\r\n                <span {...getTokenProps({ token, key })} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </Fragment>\r\n      )}\r\n    </Highlight>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <Editor\r\n        value={this.props.codeSelected.code}\r\n        onValueChange={this.onValueChange}\r\n        highlight={this.highlight}\r\n        padding={10}\r\n        style={styles.root}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default EditorExample;\r\n","import React from \"react\";\r\nimport EditorExample from \"./editor\";\r\n\r\nimport * as firebase from \"firebase\";\r\nimport configFirebase from \"./configdb\";\r\n\r\nimport \"./estilos.css\";\r\n// import { Wrapper } from \"./styles\"\r\n// // import { FlexContainer, DivCol, Button, Input, Form } from \"./styles\"\r\n// Or take a look at the integration with react-simple-code-editor:\r\n// import Example from './editor'\r\n// const App = () => (\r\n//   <Wrapper>\r\n//     <h1>Welcome to prism-react-renderer!</h1>\r\n//     <EditorExample />\r\n//   </Wrapper>\r\n// );\r\n// const App = ()=>(\r\n// \t<React.Fragment>\r\n// \t\t<FlexContainer>\r\n// \t\t\t<DivCol bg-gray800 p-4  w-2d4 lg_w-full>\r\n// \t\t\t\t<Form>\r\n// \t\t\t\t\t\t<Input outlined bg-pink400 color-white type=\"text\" placeholder=\"Description\"/>\r\n// \t\t\t\t\t\t<Button type=\"submit\" color-white bg-pink400 >Save</Button>\r\n// \t\t\t\t</Form>\r\n// \t\t\t</DivCol>\r\n// \t\t\t<DivCol p-4   w-3d4 lg_w-full>\r\n// \t\t\t\tHola mundo\r\n// \t\t\t</DivCol>\r\n// \t\t</FlexContainer>\r\n// \t</React.Fragment>\r\n// )\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(configFirebase);\r\n}\r\nconst db = firebase.database();\r\n\r\nclass App extends React.Component {\r\n  // propserties\r\n  state = {\r\n    filterText: \"\",\r\n    titleForm: \"New Block Code\",\r\n    swForm: false,\r\n    codes: [],\r\n    codeSelected: {\r\n      id: null,\r\n      description: \"\",\r\n      languaje: \"\",\r\n      code: \"\",\r\n      date: firebase.database.ServerValue.TIMESTAMP\r\n    }\r\n  };\r\n\r\n  setDataBaseStart() {\r\n    // const keyCode =  db.ref('codes').push().key\r\n    // db.ref('codes').child(keyCode).set({\r\n    // \tid:keyCode,\r\n    // \tdescription:'Otro codigo en php',\r\n    // \tlanguaje:'php',\r\n    // \tcode:`echo 'hola mundo';`,\r\n    // })\r\n\r\n    // get all rows\r\n    // una sola vez.\r\n    // const query = db.ref('codes').orderByKey()\r\n    // query.once('value').then(snapshot=>{\r\n    // \tsnapshot.forEach(childSnapshot=>{\r\n    // \t\t// const key = childSnapshot.key\r\n    // \t\tconst childData = childSnapshot.val()\r\n    // \t\tthis.setState({\r\n    // \t\t\tcodes:[childData].concat(this.state.codes)\r\n    // \t\t})\r\n    // \t})\r\n    // })\r\n\r\n    // real time db.\r\n    db.ref(\"codes\")\r\n      .orderByChild(\"date\")\r\n      .on(\"value\", snapshot => {\r\n        //cuando cambia.\r\n        const codesSn = snapshot.val();\r\n        if (codesSn) {\r\n          const codes = Object.keys(codesSn)\r\n            .reverse()\r\n            .map(sn => codesSn[sn]);\r\n          // console.log(codes)\r\n          this.setState({\r\n            codes: codes\r\n          });\r\n        }\r\n        // console.log('cambian los datos codes')\r\n        // console.log(codes)\r\n\r\n        // for(let keyV in ventas){\r\n        // \tfor(let keyP in ventas[keyV].productos){\r\n        // \t\tventas[keyV].productos[keyP].producto = store.state.admin.dataBase.productos[keyP]\r\n        // \t}\r\n        // \tventas[keyV].cliente = store.state.admin.dataBase.clientes[ventas[keyV].cliente]\r\n        // \tventas[keyV].usuario = store.state.admin.dataBase.usuarios[ventas[keyV].usuario]\r\n        // }\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.escFunction, false);\r\n    this.setDataBaseStart();\r\n  }\r\n\r\n  handledChange = event => {\r\n    const { name, value } = event.target;\r\n    let codeSelected = JSON.parse(JSON.stringify(this.state.codeSelected));\r\n    codeSelected[name] = value;\r\n    this.setState({ codeSelected: codeSelected });\r\n  };\r\n\r\n  handledClickShowCode = row => {\r\n    this.setState({\r\n      codeSelected: row,\r\n      swForm: true,\r\n      titleForm: \"Edit Block Code\"\r\n    });\r\n  };\r\n\r\n  handledClickDelete = row => {\r\n    if (window.confirm(\"Delete code?\")) {\r\n      db.ref(\"codes\")\r\n        .child(row.id)\r\n        .remove();\r\n      this.handledClickClear();\r\n    }\r\n  };\r\n\r\n  save = () => {\r\n    if (\r\n      this.state.codeSelected.description === \"\" ||\r\n      this.state.codeSelected.languaje === \"\" ||\r\n      this.state.codeSelected.code === \"\"\r\n    ) {\r\n      alert(\"All fields required!\");\r\n    } else {\r\n      if (this.state.codeSelected.id) {\r\n        //update\r\n        // const codes = this.state.codes.map(c=> c.id===this.state.codeSelected.id?this.state.codeSelected:c)\r\n        // this.setState({\r\n        // \tcodes:codes,\r\n        // \tcodeSelected:{id:null,description:'', languaje:'', code:''}\r\n        // })\r\n\r\n        // update DB(firebase) and emmit \tdb.ref('codes').on('value', snapshot..., for update codes in client\r\n\r\n        let codeSelected = JSON.parse(JSON.stringify(this.state.codeSelected));\r\n        codeSelected.date = firebase.database.ServerValue.TIMESTAMP;\r\n        db.ref()\r\n          .child(`codes/${this.state.codeSelected.id}`)\r\n          .update(codeSelected);\r\n      } else {\r\n        //crear\r\n        // let codeSelected = JSON.parse(JSON.stringify(this.state.codeSelected))\r\n        // codeSelected.id = Date.now()\r\n        // this.setState({\r\n        // \tcodes:[codeSelected].concat(this.state.codes),//add\r\n        // \tcodeSelected:{id:null,description:'', languaje:'', code:''}\r\n        // })\r\n\r\n        let codeSelected = JSON.parse(JSON.stringify(this.state.codeSelected));\r\n        const keyCode = db.ref(\"codes\").push().key;\r\n        codeSelected.id = keyCode;\r\n        codeSelected.date = firebase.database.ServerValue.TIMESTAMP;\r\n        db.ref(\"codes\")\r\n          .child(keyCode)\r\n          .set(codeSelected); //emit on('value',..)\r\n      }\r\n      this.setState({ swForm: false });\r\n      this.handledClickClear();\r\n    }\r\n  };\r\n\r\n  handledSubmitSave = e => {\r\n    console.log(\"save\");\r\n\r\n    e.preventDefault();\r\n    this.save();\r\n  };\r\n\r\n  valueChange = code => {\r\n    let codeSelected = JSON.parse(JSON.stringify(this.state.codeSelected));\r\n    codeSelected.code = code;\r\n    this.setState({ codeSelected: codeSelected });\r\n  };\r\n\r\n  handledClickClear = () => {\r\n    this.setState({\r\n      codeSelected: { id: null, description: \"\", languaje: \"\", code: \"\" },\r\n      titleForm: \"New Block Code\"\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const filterInput = document.getElementById(\"description\");\r\n      if (filterInput) {\r\n        document.getElementById(\"description\").focus();\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  escFunction = event => {\r\n    if (event.keyCode === 27) {\r\n      event.preventDefault();\r\n      this.setState({ swForm: false });\r\n    }\r\n  };\r\n  handledClickAdd = () => {\r\n    this.setState({ swForm: true, titleForm: \"New Block Code\" });\r\n    this.handledClickClear();\r\n  };\r\n\r\n  handledFilterChange = event => {\r\n    // console.log(event);\r\n    const { value } = event.target;\r\n    this.setState({\r\n      filterText: value\r\n    });\r\n    // console.log(this.state.filterText);\r\n  };\r\n  getFormatDate(date) {\r\n    const dt = new Date(date);\r\n    return `${(dt.getMonth() + 1).toString().padStart(2, \"0\")}/${dt\r\n      .getDate()\r\n      .toString()\r\n      .padStart(2, \"0\")}/${dt\r\n      .getFullYear()\r\n      .toString()\r\n      .padStart(4, \"0\")} ${dt\r\n      .getHours()\r\n      .toString()\r\n      .padStart(2, \"0\")}:${dt\r\n      .getMinutes()\r\n      .toString()\r\n      .padStart(2, \"0\")}:${dt\r\n      .getSeconds()\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  }\r\n\r\n  getFilterCodes() {\r\n    const filterArray = this.state.filterText\r\n      .trim()\r\n      .toLocaleLowerCase()\r\n      .split(\" \");\r\n\r\n    if (filterArray.length) {\r\n      return this.state.codes.filter(c => {\r\n        const description = c.description.toLowerCase();\r\n        //every cada elemento de filterArray.\r\n        return filterArray.every(currentValue => {\r\n          return (\r\n            description.indexOf(currentValue) > -1 ||\r\n            c.languaje.indexOf(currentValue) > -1\r\n          );\r\n        });\r\n      });\r\n    }\r\n    return this.state.codes;\r\n  }\r\n  handledClickFilerClear = () => {\r\n    setTimeout(() => {\r\n      this.setState({ filterText: \"\" });\r\n      document.getElementById(\"filter\").focus();\r\n    });\r\n  };\r\n\r\n  handledKeyDown = event => {\r\n    if (event.keyCode === 27) {\r\n      setTimeout(() => {\r\n        this.setState({ filterText: \"\" });\r\n        document.getElementById(\"filter\").focus();\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const codes = this.getFilterCodes();\r\n\r\n    const rows = codes.map(row => {\r\n      return (\r\n        <tr key={row.id}>\r\n          <td onClick={() => this.handledClickShowCode(row)}>\r\n            {row.description}\r\n          </td>\r\n          <td>{row.languaje}</td>\r\n          <td>{this.getFormatDate(row.date)}</td>\r\n          <td>\r\n            <button onClick={() => this.handledClickDelete(row)}>Delete</button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    let modal = undefined;\r\n    if (this.state.swForm) {\r\n      const bg =\r\n        this.state.titleForm === \"New Block Code\" ? \"bg-indigo\" : \"bg-purple\";\r\n      modal = (\r\n        <div className={`modal ${bg}`}>\r\n          <div className=\"modal__header\">\r\n            <h2>{this.state.titleForm}</h2>\r\n            <form onSubmit={this.handledSubmitSave} autoComplete=\"off\">\r\n              <div className=\"form-row\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  id=\"description\"\r\n                  placeholder=\"Description\"\r\n                  value={this.state.codeSelected.description}\r\n                  onChange={this.handledChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <label htmlFor=\"languaje\">Languaje</label>\r\n                <select\r\n                  type=\"text\"\r\n                  name=\"languaje\"\r\n                  id=\"languaje\"\r\n                  placeholder=\"Languaje\"\r\n                  value={this.state.codeSelected.languaje}\r\n                  onChange={this.handledChange}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  <option value=\"javascript\">Javascript</option>\r\n                  <option value=\"jsx\">jsx</option>\r\n                  <option value=\"tsx\">tsx</option>\r\n                  <option value=\"typescript\">typescript</option>\r\n                  <option value=\"coffeescript\">coffeescript</option>\r\n                  <option value=\"json\">json</option>\r\n                  <option value=\"html\">html</option>\r\n                  <option value=\"css\">css</option>\r\n                  <option value=\"sass\">sass</option>\r\n                  <option value=\"less\">less</option>\r\n                  <option value=\"php\">php</option>\r\n                  <option value=\"java\">java</option>\r\n                  <option value=\"visual-basic\">visual-basic</option>\r\n                  <option value=\"python\">python</option>\r\n                  <option value=\"ruby\">ruby</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <label htmlFor=\"code\">\r\n                  Code (ctrl+shift+v, paste whit format)\r\n                </label>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"modal__content\">\r\n            <EditorExample\r\n              codeSelected={this.state.codeSelected}\r\n              valueChange={code => this.valueChange(code)}\r\n            />\r\n          </div>\r\n          <div className=\"modal__footer\">\r\n            <button type=\"button\" onClick={this.handledClickClear}>\r\n              Clear\r\n            </button>\r\n            <button type=\"submit\" onClick={this.handledSubmitSave}>\r\n              Save\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                this.setState({ swForm: false });\r\n              }}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {modal}\r\n\r\n        <div className=\"list\">\r\n          <h2>Block Codes</h2>\r\n          <br />\r\n          <form className=\"filter\" autoComplete=\"off\">\r\n            <div className=\"form-row\">\r\n              {/* <label htmlFor=\"filter\">Filter</label> */}\r\n              <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                id=\"filter\"\r\n                placeholder=\"Filter\"\r\n                value={this.state.filterText}\r\n                onChange={this.handledFilterChange}\r\n                onKeyDown={this.handledKeyDown}\r\n              />\r\n              <span\r\n                className=\"clear-filter\"\r\n                onClick={this.handledClickFilerClear}\r\n              >\r\n                &times;\r\n              </span>\r\n            </div>\r\n          </form>\r\n          <br />\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Description</th>\r\n                <th>Languaje</th>\r\n                <th>Update</th>\r\n                <th>Options</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{rows}</tbody>\r\n          </table>\r\n          <div className=\"btn-add\">\r\n            <button type=\"button\" onClick={this.handledClickAdd}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export default{\r\n  apiKey: \"AIzaSyDkhUoMj1amCq4Yzrz-1hTxP7c615j88ZI\",\r\n  authDomain: \"appcode-137e8.firebaseapp.com\",\r\n  databaseURL: \"https://appcode-137e8.firebaseio.com\",\r\n  projectId: \"appcode-137e8\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"863316602971\",\r\n  appId: \"1:863316602971:web:1d80bfcee0fcd063\"\r\n}\r\n\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './App'\r\n// import './index.css';\r\n\r\nReactDom.render(<App/>, document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}